Post-1, Question-57145
While creating classes in Java I often find myself creating instance-level collections that I know ahead of time will be very small - less than 10 items in the collection. But I don't know the number of items ahead of time so I typically opt for a dynamic collection (ArrayList, Vector, etc). A part of me keeps nagging at me that it's wasteful to use complex dynamic collections for something this small in size. Is there a better way of implementing something like this? Or is this the norm? Note, I'm not hit with any (noticeable) performance penalties or anything like that. This is just me wondering if there isn't a better way to do things.

Post-2, Question-25637
Is there a way to shutdown a computer using a built-in Java method?

Post-3, Question-52353
For example, let's say I have an application that can read in a CSV file with piles of data rows.  I give the user a summary of the number of rows based on types of data, but I want to make sure that I don't read in too many rows of data and cause OutOfMemoryErrors.  Each row translates into an object.  Is there an easy way to find out the size of that object programmatically?  Is there a reference that defines how large primitive types and object references are for a VM? Right now, I have code that says read up to 32,000 rows, but I'd also like to have code that says read as many rows as possible until I've used 32MB of memory.  Maybe that is a different question, but I'd still like to know.

Post-4, Question-58163
It seems to me that introducing an ORM tool is supposed to make your architecture cleaner, but for efficiency I've found myself bypassing it and iterating over a JDBC Result Set on occasion.  This leads to an uncoordinated tangle of artifacts instead of a cleaner architecture. Is this because I'm applying the tool in an invalid Context, or is it deeper than that? When can/should you go whole hog with the ORM approach? Any insight would be greatly appreciated. A little of background: In my environment  I have about 50 client computers and 1 reasonably powerful SQL Server. I have a desktop application in which all 50 clients are accessing the data at all times. The project's Data Model has gone through a number of reorganizations for various reasons including clarity, efficiency, etc. My Data Model's history JDBC calls directly DAO + POJO without relations between Pojos (basically wrapping the JDBC).  Added Relations between POJOs implementing Lazy Loading, but just hiding the inter-DAO calls Jumped onto the Hibernate bandwagon after seeing how "simple" it made data access (it made inter POJO relations trivial) and because it could decrease the number of round trips to the database when working with many related entities. Since it was a desktop application keeping Sessions open long term was a nightmare so it ended up causing a whole lot of issues Stepped back to a partial DAO/Hibernate approach that allows me to make direct JDBC calls behind the DAO curtain while at the same time using Hibernate.

Post-5, Question-42990
I am looking for a regex that will match a string that starts with one substring and does not end with a certain substring. Example: Should match anything that starts with "foo" and doesn't end with "bar".  I know about the [^...] syntax, but I can't find anything that will do that for a string instead of single characters.   I am specifically trying to do this for Java's regex, but I've run into this before so answers for other regex engines would be great too.   Thanks to @Kibbee for verifying that this works in C# as well.

Post-6, Question-31394
I see many similar questions, however I want to find the Username of the currently logged in user using Java. Its probably something like: But, I'm not quite sure.

Post-7, Question-43199
The login page in my Tapestry application has a property in which the password the user types in is stored, which is then compared against the value from the database. If the user enters a password with multi-byte characters, such as: ...an inspection of the return value of getPassword() (the abstract method for the corresponding property) gives: Clearly, that's not encoded properly. Yet Firebug reports that the page is served up in UTF-8, so presumably the form submission request would also be encoded in UTF-8. Inspecting the value as it comes from the database produces the correct string, so it wouldn't appear to be an OS or IDE encoding issue. I have not overridden Tapestry's default value for org.apache.tapestry.output-encoding in the .application file, and the Tapestry 4 documentation indicates that the default value for the property is UTF-8. So why does Tapestry appear to botch the encoding when setting the property? Relevant code follows: Login.html Login.page Login.java Updates @Jan Soltis: Well, if I inspect the value that comes from the database, it displays the correct string, so it would seem that my editor, OS and database are all encoding the value correctly. I've also checked my .application file; it does not contain an org.apache.tapestry.output-encoding entry, and the Tapestry 4 documentation indicates that the default value for this property is UTF-8. I have updated the description above to reflect the answers to your questions. @myself: Solution found.

Post-8, Question-4149
I have an application that writes information to file. This information is used post-execution to determine pass/failure/correctness of the application. I'd like to be able to read the file as it is being written so that I can do these pass/failure/correctness checks in realtime. I assume it is possible to do this, but what are the gotchas involved when using Java? If the reading catches up to the writing, will it just wait for more writes up until the file is closed, or will the read throw an exception at this point? If the latter, what do I do then?  My intuition is currently pushing me towards BufferedStreams. Is this the way to go?

Post-9, Question-43842
I have a string that contains the representation of a date. It looks like:  Thu Nov 30 19:00:00 EST 2006 I'm trying to create a Date object using SimpleDateFormat and have 2 problems.  1.) I can't figure out the pattern to hard-code the solution into the SimpleDateFormat constructor 2.) I can't find a way I could parse the string using API to determine the pattern so I could reuse this for different patterns of date output  If anyone knows a solution using API or a custom solution I would greatly appreciate it.

Post-10, Question-27581
What issues / pitfalls must be considered when overriding equals and hashCode?

Post-11, Question-28538
I'm trying to find a way to list the (static) dependency requirements of a jar file, in terms of which symbols are required at run time. I can see that the methods exported by classes can be listed using "javap", but there doesn't seem to be an opposite facility to list the 'imports'. Is it possible to do this? This would be similar to the dumpbin utility in Windows development which can be used to list the exports and imports of a DLL. EDIT : Thanks for the responses; I checked out all of the suggestions; accepted DependencyFinder as it most closely meets what I was looking for.

Post-12, Question-62490
I am receiving SOAP requests from a client that uses the Axis 1.4 libraries. The requests have the following form: As you can see, several prefixes are defined for the same namespace, e.g. the namespace http://example.com/schema/common has the prefixes ns4, ns5, ns6, ns7 and ns8. Some long requests define several hundred prefixes for the same namespace. This causes a problem with the Saxon XSLT processor, that I use to transform the requests. Saxon limits the the number of different prefixes for the same namespace to 255 and throws an exception when you define more prefixes. Can Axis 1.4 be configured to define smarter prefixes, so that there is only one prefix for each namespace?

Post-13, Question-45424
I'm using Struts 2. I'd like to return from an Action to the page which invoked it. Say I'm in page x.jsp, I invoke Visual action to change CSS preferences in the session; I want to return to x.jsp rather than to a fixed page (i.e. home.jsp) Here's the relevant struts.xml fragment: Of course my VisualizationAction.execute() returns home. Is there any "magic" constant (like, say, INPUT_PAGE) that I may return to do the trick? Must I use a more involved method (i.e. extracting the request page and forwarding to it)? T.I.A.

Post-14, Question-45623
In Java, what would the best way be to have a constantly listening port open, and still send upon receipt of a packet. I am not particularly savvy with network programming at the moment, so the tutorials I have found on the net aren't particularly helpful. Would it make sense to have the listening socket as a serversocket and run it in a separate thread to the socket I'm using to send data to the server? In a loosely related question. Does anyone know if programming simply for java, in netbeans then exporting it for use on a blackberry (using a plugin) the sockets would still work ?

Post-15, Question-12870
This is a nasty one for me...  I'm a PHP guy working in Java on a JSP project.  I know how to do what I'm attempting through too much code and a complete lack of finesse.   I'd prefer to do it RIGHT. :) Here is the situation: I'm writing a small display to show customers what days they can water their lawns based on their watering group (ABCDE) and what time of year it is.  Our seasons look like this: Summer (5-1 to 8-31)  Spring  (3-1 to 4-30)  Fall (9-1 to 10-31) Winter (11-1 to 2-28)  An example might be: If I'm in group A, here would be my allowed times: Winter: Mondays only Spring: Tues, Thurs, Sat Summer: Any Day Fall: Tues, Thurs, Sat If I was writing this in PHP I would use arrays like this: I COULD make the days arrays (array("Tuesday","Thursday","Saturday")) etc, but it is not necessary for what I'm really trying to accomplish. I will also need to setup arrays to determine what season I'm in: Can anyone suggest a really cool way to do this? I will have today's date and the group letter.  I will need to get out of my function a day (M) or a series of days (tTS), (Any). Thanks, folks!

Post-16, Question-46496
Today I had a coworker suggest I refactor my code to use a label statement to control flow through 2 nested for loops I had created. I've never used them before because personally I think they decrease the readability of a program. I am willing to change my mind about using them if the argument is solid enough however. What are people's opinions on label statements?

Post-17, Question-29461
I'm working on getting an Introduction to Groovy presentation ready for my local Java User's Group and I've pretty much got it together.  What I'd like to see is what you all think I just have to cover.   Remember, this is an introductory presentation.  Most of the people are experienced Java developers, but I'm pretty sure they have little to no Groovy knowledge.  I won't poison the well by mentioning what I've already got down to cover as I want to see what the community has to offer. What are the best things I can cover (in a 1 hour time frame) that will help me effectively communicate to these Java developers how useful Groovy could be to them? p.s. I'll share my presentation here later for anyone interested. as promised now that my presentation has been presented here it is

Post-18, Question-62241
Is there an easy way to avoid dealing with text encoding problems?

Post-19, Question-30696
I posted the code below to the Sun developers forum since I thought it was erroring (the true error was before this code was even hit).  One of the responses I got said it would not work and to throw it away.  But it is actually working.  It might not be the best code (I am new to Java) but is there something inherently "wrong" with it?  ============= CODE: private static void ImportFromCsvToAccessTable(String mdbFilePath, String accessTableName  , String csvDirPath , String csvFileName ) throws ClassNotFoundException, SQLException {     Connection msConn = getDestinationConnection(mdbFilePath);     try{         String strSQL = "SELECT * INTO " + accessTableName + " FROM [Text;HDR=YES;DATABASE=" + csvDirPath + ";].[" + csvFileName + "]";         PreparedStatement selectPrepSt = msConn.prepareStatement(strSQL );         boolean result = selectPrepSt.execute();                 System.out.println( "result = " + result );     } catch(Exception e) {         System.out.println(e);     } finally {         msConn.close();     } }

Post-20, Question-31127
When running a Java app from eclipse my ImageIcon shows up just fine. But after creating a jar the path to the image obviously gets screwed up. Is there a way to extract an image from the jar at runtime so I can then open it up?  Or, is there a better way to do this? I'd like to distribute a single jar file if possible.

Post-21, Question-47555
I am coming from an Enterprise Java background which involves a fairly heavyweight software stack, and have recently discovered the  Stripes framework; my initial impression is that this seems to do a good job of minimising the unpleasant parts of building a web application in Java. Has anyone used Stripes for a project that has gone live? And can you share your experiences from the project? Also, did you consider any other technologies and (if so) why did you chose Stripes?

Post-22, Question-11561
I've used Apache CXF to expose about ten java classes as web services. I've generated clients using CXF, Axis, and .NET. In Axis and CXF a "Service" or "Locator" is generated.  From this service you can get a "Port". The "Port" is used to make individual calls to the methods exposed by the web service. In .NET the "Service" directly exposes the calls to the web service. Can someone explain the difference between a port, a service, a locator, and an endpoint when it comes to web services? Axis: CXF: .net:

Post-23, Question-62491
Nokia has stopped offering its Developer's Suite, relying on other IDEs, including Eclipse. Meanwhile, Nokia changed its own development tools again and EclipseMe has also changed. This leaves most documentation irrelevant.  I want to know what does it take to make a simple Hello-World? (I already found out myself, so this is a Q&A for other people to use)

Post-24, Question-48144
It seems like anything you can do with bytecode you can do just as easily and much faster in native code. In theory, you could even retain platform and language independence by distributing programs and libraries in bytecode then compiling to native code at installation, rather than JITing it. So in general, when would you want to execute bytecode instead of native?

Post-25, Question-31924
I have done Java and JSP programming in the past, but I am new to Java Server Faces and want to know if there's a set of best practices for JSF development.
