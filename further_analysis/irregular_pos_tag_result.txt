Sentence 1: (I already found out myself, so this is a Q&A for other people to use)
[('(', '('), ('I', 'PRP'), ('already', 'RB'), ('found', 'VBD'), ('out', 'IN'), ('myself', 'PRP'), (',', ','), ('so', 'RB'), ('this', 'DT'), ('is', 'VBZ'), ('a', 'DT'), ('Q', 'NNP'), ('&', 'CC'), ('A', 'NNP'), ('for', 'IN'), ('other', 'JJ'), ('people', 'NNS'), ('to', 'TO'), ('use', 'VB'), (')', ')')]

Sentence 2: Our stack is Stripes/EJB3/JPA.
[('Our', 'PRP$'), ('stack', 'NN'), ('is', 'VBZ'), ('Stripes', 'NNP'), ('/', 'NNP'), ('EJB3', 'NNP'), ('/', 'NNP'), ('JPA', 'NNP'), ('.', '.')]

Sentence 3: After uninstalling that AV product, we found we could allocate at least 1.6gb,   i.e,   -Xmx1600m (m is mandatory other wise it will lead to another error "Too small initial heap")   works.
[('After', 'IN'), ('uninstalling', 'VBG'), ('that', 'IN'), ('AV', 'NNP'), ('product', 'NN'), (',', ','), ('we', 'PRP'), ('found', 'VBD'), ('we', 'PRP'), ('could', 'MD'), ('allocate', 'VB'), ('at', 'IN'), ('least', 'JJS'), ('1.6gb', 'CD'), (',', ','), ('i.e', 'NN'), (',', ','), ('-Xmx1600m', 'NNP'), ('(', '('), ('m', 'NN'), ('is', 'VBZ'), ('mandatory', 'JJ'), ('other', 'JJ'), ('wise', 'NN'), ('it', 'PRP'), ('will', 'MD'), ('lead', 'VB'), ('to', 'TO'), ('another', 'DT'), ('error', 'NN'), ('"', 'NNP'), ('Too', 'NNP'), ('small', 'JJ'), ('initial', 'JJ'), ('heap', 'JJ'), ('"', 'NN'), (')', ')'), ('works', 'VBZ'), ('.', '.')]

Sentence 4: BTW, autoboxing/unboxing is internally the same as the first method.
[('BTW', 'NNP'), (',', ','), ('autoboxing', 'VBG'), ('/', 'JJ'), ('unboxing', 'NN'), ('is', 'VBZ'), ('internally', 'RB'), ('the', 'DT'), ('same', 'JJ'), ('as', 'IN'), ('the', 'DT'), ('first', 'JJ'), ('method', 'NN'), ('.', '.')]

Sentence 5: Another simple thing to do would be to use a debugger or logging statement to check the value of  StringUtils.objectToString(currClip.get("market_local")) to make sure it is what you think it is.
[('Another', 'DT'), ('simple', 'JJ'), ('thing', 'NN'), ('to', 'TO'), ('do', 'VB'), ('would', 'MD'), ('be', 'VB'), ('to', 'TO'), ('use', 'VB'), ('a', 'DT'), ('debugger', 'NN'), ('or', 'CC'), ('logging', 'VBG'), ('statement', 'NN'), ('to', 'TO'), ('check', 'VB'), ('the', 'DT'), ('value', 'NN'), ('of', 'IN'), ('StringUtils.objectToString', 'NNP'), ('(', '('), ('currClip.get', 'NN'), ('(', '('), ('"', 'JJ'), ('market_local', 'JJ'), ('"', 'NN'), (')', ')'), (')', ')'), ('to', 'TO'), ('make', 'VB'), ('sure', 'JJ'), ('it', 'PRP'), ('is', 'VBZ'), ('what', 'WP'), ('you', 'PRP'), ('think', 'VBP'), ('it', 'PRP'), ('is', 'VBZ'), ('.', '.')]

Sentence 6: The only way I have found to do this to add a FocusAdapter to each control and override the focusGained() method to Do The Right Thing[tm].
[('The', 'DT'), ('only', 'JJ'), ('way', 'NN'), ('I', 'PRP'), ('have', 'VBP'), ('found', 'VBN'), ('to', 'TO'), ('do', 'VB'), ('this', 'DT'), ('to', 'TO'), ('add', 'VB'), ('a', 'DT'), ('FocusAdapter', 'NNP'), ('to', 'TO'), ('each', 'DT'), ('control', 'NN'), ('and', 'CC'), ('override', 'VB'), ('the', 'DT'), ('focusGained()', 'NN'), ('method', 'NN'), ('to', 'TO'), ('Do The Right Thing', 'NNP'), ('[', 'NNP'), ('tm', 'NN'), (']', 'NN'), ('.', '.')]

Sentence 7: OS X natively provides an easy mechanism for wrapping Java apps in native application bundles, but producing an app for Windows/Linux that doesn't require the user to run an ugly batch file or click on a .jar is still a hassle.
[('OS', 'NNP'), ('X', 'NNP'), ('natively', 'RB'), ('provides', 'VBZ'), ('an', 'DT'), ('easy', 'JJ'), ('mechanism', 'NN'), ('for', 'IN'), ('wrapping', 'VBG'), ('Java', 'NNP'), ('apps', 'NN'), ('in', 'IN'), ('native', 'JJ'), ('application', 'NN'), ('bundles', 'NNS'), (',', ','), ('but', 'CC'), ('producing', 'VBG'), ('an', 'DT'), ('app', 'NN'), ('for', 'IN'), ('Windows', 'NNP'), ('/', 'NNP'), ('Linux', 'NNP'), ('that', 'IN'), ("doesn't", 'NN'), ('require', 'VB'), ('the', 'DT'), ('user', 'NN'), ('to', 'TO'), ('run', 'VB'), ('an', 'DT'), ('ugly', 'JJ'), ('batch', 'NN'), ('file', 'NN'), ('or', 'CC'), ('click', 'NN'), ('on', 'IN'), ('a', 'DT'), ('.jar', 'NN'), ('is', 'VBZ'), ('still', 'RB'), ('a', 'DT'), ('hassle', 'NN'), ('.', '.')]

Sentence 8: Because of that, "foo".format() makes little sense, as it would have to be called like The original java authors (and .NET authors), decided that a static method made more sense in this situation, as you are not modifying "foo", but instead calling a format method and passing in an input string.
[('Because', 'IN'), ('of', 'IN'), ('that', 'DT'), (',', ','), ('"', 'FW'), ('foo', 'JJ'), ('"', 'NN'), ('.', '.'), ('format()', 'JJ'), ('makes', 'VBZ'), ('little', 'JJ'), ('sense', 'NN'), (',', ','), ('as', 'IN'), ('it', 'PRP'), ('would', 'MD'), ('have', 'VB'), ('to', 'TO'), ('be', 'VB'), ('called', 'VBN'), ('like', 'IN'), ('The', 'DT'), ('original', 'JJ'), ('java', 'NN'), ('authors', 'NNS'), ('(', '('), ('and', 'CC'), ('.NET', 'NNP'), ('authors', 'NNS'), (')', ')'), (',', ','), ('decided', 'VBD'), ('that', 'IN'), ('a', 'DT'), ('static', 'JJ'), ('method', 'NN'), ('made', 'VBD'), ('more', 'JJR'), ('sense', 'NN'), ('in', 'IN'), ('this', 'DT'), ('situation', 'NN'), (',', ','), ('as', 'IN'), ('you', 'PRP'), ('are', 'VBP'), ('not', 'RB'), ('modifying', 'VBG'), ('"', 'NNP'), ('foo', 'NN'), ('"', 'NN'), (',', ','), ('but', 'CC'), ('instead', 'RB'), ('calling', 'VBG'), ('a', 'DT'), ('format', 'NN'), ('method', 'NN'), ('and', 'CC'), ('passing', 'NN'), ('in', 'IN'), ('an', 'DT'), ('input', 'NN'), ('string', 'NN'), ('.', '.')]

Sentence 9: You may be able to take @rcreswick's answer and expand on it a little to make it work.
[('You', 'PRP'), ('may', 'MD'), ('be', 'VB'), ('able', 'JJ'), ('to', 'TO'), ('take', 'VB'), ('@rcreswick', 'NNP'), ("'", 'POS'), ('s', 'NN'), ('answer', 'NN'), ('and', 'CC'), ('expand', 'NN'), ('on', 'IN'), ('it', 'PRP'), ('a', 'DT'), ('little', 'JJ'), ('to', 'TO'), ('make', 'VB'), ('it', 'PRP'), ('work', 'NN'), ('.', '.')]

Sentence 10: FYI, the IBM Java 6 VM does contain an ahead-of-time compiler (AOT).
[('FYI', 'NNP'), (',', ','), ('the', 'DT'), ('IBM Java 6', 'NNP'), ('VM', 'NNP'), ('does', 'VBZ'), ('contain', 'VB'), ('an', 'DT'), ('ahead-of-time', 'JJ'), ('compiler', 'NN'), ('(', '('), ('AOT', 'NNP'), (')', ')'), ('.', '.')]
