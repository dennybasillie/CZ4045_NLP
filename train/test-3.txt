I	O
am	O
currently	O
requiring	O
this	O
to	O
run	O
an	O
Eclipse	B-Irregular
-	I-Irregular
based	I-Irregular
application	O
but	O
I	O
need	O
to	O
set	O
some	O
variables	O
first	O
that	O
is	O
local	O
to	O
that	O
application	O
.	B-Irregular
sc	B-Irregular
.	I-Irregular
exe	I-Irregular
will	O
only	O
allow	O
executables	O
but	O
not	O
scripts	O
so	O
I	O
turned	O
to	O
autoexnt	B-Irregular
.	I-Irregular
exe	I-Irregular
which	O
is	O
part	O
of	O
the	O
Windows	O
2003	O
resource	O
kit	O
.	B-Irregular
It	O
restricts	O
the	O
service	O
to	O
a	O
single	O
batch	O
file	O
but	O
I	O
only	O
need	O
one	O
batch	O
script	O
to	O
be	O
converted	O
into	O
a	O
service	O
.	B-Irregular
ciao	O
!	B-Irregular
After	O
a	O
long	O
while	O
of	O
testing	O
various	O
solutions	O
,	B-Irregular
for	O
me	O
it	O
turned	O
out	O
to	O
be	O
:	B-Irregular
Spring	O
MVC	B-Irregular
for	O
the	O
presentation	O
and	O
controller	O
layer	O
(	B-Irregular
NO	O
Spring	O
Webflow	B-Irregular
though	O
,	B-Irregular
because	O
my	O
flows	O
are	O
based	O
on	O
ajax	B-Irregular
)	I-Irregular
jQuery	I-Irregular
for	O
all	O
the	O
client	O
side	O
stuff	O
Spring	O
Security	O
for	O
the	O
,	B-Irregular
well	O
,	B-Irregular
security	O
aspect	O
Hibernate	O
/	B-Irregular
JPA2	I-Irregular
Jetty	O
for	O
the	O
sake	O
of	O
continuations	O
(	B-Irregular
comet	O
)	B-Irregular
One	O
month	O
of	O
an	O
extraordinarily	O
steep	O
learning	O
curve	O
,	B-Irregular
but	O
now	O
I	O
am	O
happy	O
.	B-Irregular
I	O
would	O
also	O
like	O
to	O
mention	O
that	O
I	O
was	O
just	O
a	O
little	O
step	O
away	O
from	O
skipping	O
all	O
that	O
Java	O
stuff	O
and	O
learing	B-Irregular
Scala	O
/	B-Irregular
LIFT	O
instead	O
.	B-Irregular
As	O
far	O
as	O
I	O
am	O
concerned	O
,	B-Irregular
everything	O
in	O
Java	O
that	O
is	O
related	O
with	O
cutting	O
edge	O
web	O
development	O
(	B-Irregular
comet	O
,	B-Irregular
async	I-Irregular
communication	O
,	B-Irregular
security	O
(	B-Irregular
yes	O
,	B-Irregular
even	O
with	O
Spring	B-Irregular
Security	I-Irregular
!	I-Irregular
)	I-Irregular
)	I-Irregular
still	O
is	O
a	O
bit	O
of	O
a	O
hack	O
(	B-Irregular
proove	I-Irregular
me	O
wrong	O
by	O
evidence	O
,	B-Irregular
pleeease	I-Irregular
!	I-Irregular
)	I-Irregular
.	I-Irregular
To	O
me	O
,	B-Irregular
Scala	O
/	B-Irregular
LIFT	O
seems	O
to	O
be	O
a	O
more	O
out	B-Irregular
-	I-Irregular
of	I-Irregular
-	I-Irregular
the	I-Irregular
-	I-Irregular
box	I-Irregular
and	O
all	B-Irregular
-	I-Irregular
in	I-Irregular
-	I-Irregular
one	I-Irregular
solution	O
.	B-Irregular
The	O
reason	O
why	O
I	O
finally	O
decided	O
not	O
to	O
go	O
with	O
Scala	O
is	O
as	O
a	O
project	O
leader	O
I	O
must	O
consider	O
human	O
resources	O
and	O
Java	O
developers	O
are	O
much	O
easier	O
to	O
find	O
than	O
Scala	O
developers	O
for	O
most	O
developers	O
in	O
my	O
team	O
,	B-Irregular
Scala	I-Irregular
'	I-Irregular
s	I-Irregular
funcional	I-Irregular
concept	O
,	B-Irregular
as	O
excellent	O
as	O
it	O
is	O
,	B-Irregular
is	O
hard	O
to	O
understand	O
Cheers	O
Er	O
This	O
answer	O
is	O
not	O
related	O
to	O
Object	O
size	O
,	B-Irregular
but	O
when	O
you	O
are	O
using	O
array	O
to	O
accommodate	O
the	O
objects	O
;	B-Irregular
how	O
much	O
memory	O
size	O
it	O
will	O
allocate	O
for	O
the	O
object	O
.	B-Irregular
So	O
arrays	O
,	B-Irregular
list	O
,	B-Irregular
or	O
map	O
all	O
those	O
collection	O
won	B-Irregular
'	I-Irregular
t	I-Irregular
be	O
going	O
to	O
store	O
objects	O
really	O
(	B-Irregular
only	O
at	O
the	O
time	O
of	O
primitives	O
,	B-Irregular
real	O
object	O
memory	O
size	O
is	O
needed	O
)	B-Irregular
,	I-Irregular
it	O
will	O
store	O
only	O
references	O
for	O
those	O
objects	O
.	B-Irregular
Now	O
the	O
Used	O
heap	O
memory	O
=	B-Irregular
sizeOfObj	I-Irregular
+	I-Irregular
sizeOfRef	I-Irregular
(	I-Irregular
*	I-Irregular
4	O
bytes	O
)	B-Irregular
in	O
collection	O
(	B-Irregular
4	I-Irregular
/	I-Irregular
8	I-Irregular
bytes	O
)	B-Irregular
depends	O
on	O
(	B-Irregular
32	O
/	B-Irregular
64	O
bit	O
)	B-Irregular
OS	O
PRIMITIVES	O
OBJECTS	O
I	O
mean	O
to	O
say	O
all	O
the	O
object	O
REFERENCE	O
needs	O
only	O
4	O
bytes	O
of	O
memory	O
.	B-Irregular
It	O
may	O
be	O
String	O
reference	O
OR	O
Double	O
object	O
reference	O
,	B-Irregular
But	O
depends	O
on	O
object	O
creation	O
the	O
memory	O
needed	O
will	O
vary	O
.	B-Irregular
e	B-Irregular
.	I-Irregular
g	I-Irregular
)	I-Irregular
If	O
i	O
create	O
object	O
for	O
the	O
below	O
class	O
ReferenceMemoryTest	B-Irregular
then	O
4	O
+	B-Irregular
4	O
+	B-Irregular
4	O
=	B-Irregular
12	O
bytes	O
of	O
memory	O
will	O
be	O
created	O
.	B-Irregular
The	O
memory	O
may	O
differ	O
when	O
you	O
are	O
trying	O
to	O
initialize	O
the	O
references	O
.	B-Irregular
So	O
when	O
are	O
creating	O
object	O
/	B-Irregular
reference	O
array	O
,	B-Irregular
all	O
its	O
contents	O
will	O
be	O
occupied	O
with	O
NULL	O
references	O
.	B-Irregular
And	O
we	O
know	O
each	O
reference	O
requires	O
4	O
bytes	O
.	B-Irregular
And	O
finally	O
,	B-Irregular
memory	O
allocation	O
for	O
the	O
below	O
code	O
is	O
20	O
bytes	O
.	B-Irregular
ReferenceMemoryTest	B-Irregular
ref1	I-Irregular
=	I-Irregular
new	O
ReferenceMemoryTest	B-Irregular
(	I-Irregular
)	I-Irregular
;	I-Irregular
(	I-Irregular
4	I-Irregular
(	I-Irregular
ref1	I-Irregular
)	I-Irregular
+	I-Irregular
12	O
=	B-Irregular
16	O
bytes	O
)	B-Irregular
ReferenceMemoryTest	I-Irregular
ref2	I-Irregular
=	I-Irregular
ref1	I-Irregular
;	I-Irregular
(	I-Irregular
4	I-Irregular
(	I-Irregular
ref2	I-Irregular
)	I-Irregular
+	I-Irregular
16	O
=	B-Irregular
20	O
bytes	O
)	B-Irregular
There	B-Irregular
'	I-Irregular
s	I-Irregular
a	O
standalone	O
JUnit	B-Irregular
runner	O
that	O
has	O
a	O
UI	B-Irregular
,	I-Irregular
but	O
I	O
recommend	O
using	O
one	O
of	O
the	O
builtin	B-Irregular
test	O
runners	O
in	O
the	O
Java	O
IDEs	B-Irregular
(	I-Irregular
Eclipse	O
,	B-Irregular
Netbeans	I-Irregular
,	I-Irregular
and	O
IntelliJ	B-Irregular
all	O
have	O
good	O
ones	O
)	B-Irregular
.	I-Irregular
They	O
all	O
support	O
JUnit	B-Irregular
,	I-Irregular
and	O
most	O
support	O
TestNG	B-Irregular
as	O
well	O
.	B-Irregular
C	B-Irregular
+	I-Irregular
+	I-Irregular
library	O
(	B-Irregular
the	O
part	O
formerly	O
known	O
as	O
STL	B-Irregular
)	I-Irregular
iterators	O
are	O
designed	O
to	O
be	O
compatible	O
with	O
pointers	O
.	B-Irregular
Java	O
,	B-Irregular
without	O
pointer	O
arithmetic	O
,	B-Irregular
had	O
the	O
freedom	O
to	O
be	O
more	O
programmer	B-Irregular
-	I-Irregular
friendly	I-Irregular
.	I-Irregular
In	O
C	B-Irregular
+	I-Irregular
+	I-Irregular
you	O
end	O
up	O
having	O
to	O
use	O
a	O
pair	O
of	O
iterators	O
.	B-Irregular
In	O
Java	O
you	O
either	O
use	O
an	O
iterator	O
or	O
a	O
collection	O
.	B-Irregular
Iterators	O
are	O
supposed	O
to	O
be	O
the	O
glue	O
between	O
algorithm	O
and	O
data	O
structure	O
.	B-Irregular
Code	O
written	O
for	O
1	B-Irregular
.	I-Irregular
5	I-Irregular
+	I-Irregular
rarely	O
need	O
mention	O
iterators	O
,	B-Irregular
unless	O
it	O
is	O
implementing	O
a	O
particular	O
algorithm	O
or	O
data	O
structure	O
(	B-Irregular
which	O
the	O
vary	O
majority	O
of	O
programmers	O
have	O
no	O
need	O
to	O
do	O
)	B-Irregular
.	I-Irregular
As	O
Java	O
goes	O
for	O
dynamic	O
polymorphism	O
subsets	O
and	O
the	O
like	O
are	O
much	O
easier	O
to	O
handle	O
.	B-Irregular
I	O
have	O
tried	O
a	O
few	O
and	O
the	O
closest	O
I	O
have	O
found	O
that	O
comes	O
close	O
to	O
Visual	B-Irregular
Studio	I-Irregular
is	O
Netbeans	B-Irregular
.	I-Irregular
V6	B-Irregular
.	I-Irregular
5	I-Irregular
is	O
excellent	O
and	O
realy	B-Irregular
improved	O
over	O
v5	B-Irregular
.	I-Irregular
You	O
are	O
doing	O
something	O
wrong	O
.	B-Irregular
I	O
did	O
not	O
test	O
your	O
code	O
,	B-Irregular
but	O
you	O
should	O
never	O
need	O
to	O
force	O
the	O
initialization	O
of	O
proxies	O
,	B-Irregular
the	O
property	O
accessors	O
do	O
that	O
for	O
you	O
.	B-Irregular
If	O
you	O
are	O
using	O
Hibernate	O
explicitly	O
,	B-Irregular
never	O
mind	O
using	O
JPA	B-Irregular
,	I-Irregular
since	O
you	O
already	O
have	O
lost	O
portability	O
.	B-Irregular
Hibernate	O
should	O
detect	O
automatically	O
whenever	O
it	O
needs	O
to	O
fetch	O
or	O
write	O
to	O
db	O
.	B-Irregular
If	O
you	O
issue	O
a	O
getProperty	B-Irregular
(	I-Irregular
)	I-Irregular
from	O
a	O
proxy	O
,	B-Irregular
hibernate	O
or	O
any	O
other	O
jpa	B-Irregular
provider	O
should	O
fetch	O
the	O
correspondent	O
row	O
from	O
the	O
db	O
.	B-Irregular
The	O
only	O
situation	O
I	B-Irregular
'	I-Irregular
m	I-Irregular
not	O
sure	O
hibernate	O
is	O
clever	O
enough	O
is	O
if	O
you	O
issue	O
a	O
save	B-Irregular
(	I-Irregular
)	I-Irregular
and	O
then	O
issue	O
a	O
get	B-Irregular
(	I-Irregular
)	I-Irregular
with	O
the	O
id	O
of	O
the	O
saved	O
object	O
,	B-Irregular
there	O
might	O
be	O
a	O
problem	O
if	O
the	O
save	B-Irregular
(	I-Irregular
)	I-Irregular
didn	I-Irregular
'	I-Irregular
t	I-Irregular
flush	O
the	O
object	O
to	O
db	O
.	B-Irregular
You	O
could	O
use	O
XSLT	B-Irregular
.	I-Irregular
Google	O
it	O
and	O
you	O
will	O
find	O
a	O
few	O
examples	O
e	B-Irregular
.	I-Irregular
g	I-Irregular
.	I-Irregular
CSV	I-Irregular
to	O
XML	O
If	O
you	O
use	O
XSLT	B-Irregular
you	O
can	O
then	O
convert	O
the	O
XML	O
to	O
whatever	O
format	O
you	O
want	O
.	B-Irregular
This	O
is	O
a	O
two	O
part	O
question	O
:	B-Irregular
How	O
to	O
iterate	O
over	O
the	O
entries	O
of	O
a	O
Map	O
-	B-Irregular
@	I-Irregular
ScArcher2	I-Irregular
has	O
answered	O
that	O
perfectly	O
.	B-Irregular
What	O
is	O
the	O
order	O
of	O
iteration	O
-	B-Irregular
if	O
you	O
are	O
just	O
using	O
Map	O
,	B-Irregular
then	O
strictly	O
speaking	O
,	B-Irregular
there	O
are	O
no	O
ordering	O
guarantees	O
.	B-Irregular
So	O
you	O
shouldn	B-Irregular
'	I-Irregular
t	I-Irregular
really	O
rely	O
on	O
the	O
ordering	O
given	O
by	O
any	O
implementation	O
.	B-Irregular
However	O
,	B-Irregular
the	O
SortedMap	B-Irregular
interface	O
extends	O
Map	O
and	O
provides	O
exactly	O
what	O
you	O
are	O
looking	O
for	O
-	B-Irregular
implementations	O
will	O
aways	O
give	O
a	O
consistent	O
sort	O
order	O
.	B-Irregular
NavigableMap	B-Irregular
is	O
another	O
useful	O
extension	O
-	B-Irregular
this	O
is	O
a	O
SortedMap	B-Irregular
with	O
additional	O
methods	O
for	O
finding	O
entries	O
by	O
their	O
ordered	O
position	O
in	O
the	O
key	O
set	O
.	B-Irregular
So	O
potentially	O
this	O
can	O
remove	O
the	O
need	O
for	O
iterating	O
in	O
the	O
first	O
place	O
-	B-Irregular
you	O
might	O
be	O
able	O
to	O
find	O
the	O
specific	O
entry	O
you	O
are	O
after	O
using	O
the	O
higherEntry	B-Irregular
,	I-Irregular
lowerEntry	I-Irregular
,	I-Irregular
ceilingEntry	I-Irregular
,	I-Irregular
or	O
floorEntry	B-Irregular
methods	O
.	B-Irregular
The	O
descendingMap	B-Irregular
method	O
even	O
gives	O
you	O
an	O
explicit	O
method	O
of	O
reversing	O
the	O
traversal	O
order	O
.	B-Irregular
Two	O
options	O
:	B-Irregular
OPTION	O
1	O
Generate	O
a	O
thread	O
dump	O
using	O
JMX	B-Irregular
Console	I-Irregular
In	O
order	O
to	O
generate	O
a	O
thread	O
dump	O
:	B-Irregular
Open	O
the	O
JMXConsole	B-Irregular
(	I-Irregular
for	O
example	B-Irregular
:	I-Irregular
http	I-Irregular
:	I-Irregular
/	I-Irregular
/	I-Irregular
localhost	I-Irregular
:	I-Irregular
8080	I-Irregular
)	I-Irregular
Navigate	O
to	O
jboss	B-Irregular
.	I-Irregular
system	I-Irregular
:	I-Irregular
type	I-Irregular
=	I-Irregular
ServerInfo	I-Irregular
mbean	I-Irregular
(	I-Irregular
hint	O
:	B-Irregular
you	O
can	O
probably	O
just	O
CTRL	B-Irregular
-	I-Irregular
F	I-Irregular
and	O
enter	O
type	O
=	B-Irregular
ServerInfo	I-Irregular
in	O
the	O
dialog	O
box	O
)	B-Irregular
Click	O
on	O
the	O
link	O
for	O
the	O
Server	O
Info	O
mbean	B-Irregular
.	I-Irregular
Navigate	O
to	O
the	O
bottom	O
where	O
it	O
says	O
listThreadDump	B-Irregular
Click	O
it	O
and	O
get	O
your	O
thread	O
dump	O
Notes	O
:	B-Irregular
If	O
you	O
are	O
using	O
Internet	B-Irregular
Explorer	I-Irregular
you	O
should	O
use	O
File	O
>	B-Irregular
Save	O
As	O
to	O
save	O
the	O
output	O
instead	O
of	O
copying	O
the	O
data	O
to	O
a	O
text	O
editor	O
.	B-Irregular
For	O
some	O
reason	O
when	O
you	O
copy	O
the	O
text	O
from	O
Internet	B-Irregular
Explorer	I-Irregular
the	O
line	O
breaks	O
are	O
not	O
copied	O
and	O
all	O
of	O
the	O
output	O
ends	O
up	O
on	O
a	O
single	O
line	O
.	B-Irregular
OPTION	O
2	O
Generate	O
a	O
Thread	B-Irregular
Dump	I-Irregular
using	O
Twiddle	O
Alternatively	O
you	O
can	O
use	O
twiddle	O
to	O
execute	O
the	O
listThreadDump	B-Irregular
(	I-Irregular
)	I-Irregular
method	O
and	O
pipe	O
the	O
returned	O
HTML	O
directly	O
to	O
file	O
.	B-Irregular
Use	O
this	O
command	O
line	O
:	B-Irregular
To	O
answer	O
the	O
original	O
question	O
.	B-Irregular
According	O
to	O
java	B-Irregular
docs	O
here	O
"	B-Irregular
NoSuchMethodError	I-Irregular
"	I-Irregular
Thrown	O
if	O
an	O
application	O
tries	O
to	O
call	O
a	O
specified	O
method	O
of	O
a	O
class	O
(	B-Irregular
either	O
static	O
or	O
instance	O
)	B-Irregular
,	I-Irregular
and	O
that	O
class	O
no	O
longer	O
has	O
a	O
definition	O
of	O
that	O
method	O
.	B-Irregular
Normally	O
,	B-Irregular
this	O
error	O
is	O
caught	O
by	O
the	O
compiler	O
;	B-Irregular
this	O
error	O
can	O
only	O
occur	O
at	O
run	O
time	O
if	O
the	O
definition	O
of	O
a	O
class	O
has	O
incompatibly	O
changed	O
.	B-Irregular
!	B-Irregular
)	I-Irregular
if	O
it	O
happens	O
in	O
the	O
run	O
time	O
,	B-Irregular
check	O
the	O
class	O
containing	O
the	O
method	O
is	O
in	O
class	O
path	O
.	B-Irregular
2	B-Irregular
)	I-Irregular
Check	O
if	O
you	O
have	O
added	O
new	O
version	O
of	O
jar	O
and	O
the	O
method	O
is	O
compatible	O
.	B-Irregular
Transfer	O
of	O
control	O
in	O
a	O
finally	O
block	O
throws	O
away	O
any	O
exception	O
.	B-Irregular
The	O
following	O
code	O
does	O
not	O
throw	O
RuntimeException	B-Irregular
-	I-Irregular
-	I-Irregular
it	O
is	O
lost	O
.	B-Irregular
From	O
http	B-Irregular
:	I-Irregular
/	I-Irregular
/	I-Irregular
jamesjava	I-Irregular
.	I-Irregular
blogspot	I-Irregular
.	I-Irregular
com	I-Irregular
/	I-Irregular
2006	I-Irregular
/	I-Irregular
03	I-Irregular
/	I-Irregular
dont	I-Irregular
-	I-Irregular
return	I-Irregular
-	I-Irregular
in	I-Irregular
-	I-Irregular
finally	I-Irregular
-	I-Irregular
clause	I-Irregular
.	I-Irregular
html	I-Irregular
ChartFX	B-Irregular
(	I-Irregular
http	I-Irregular
:	I-Irregular
/	I-Irregular
/	I-Irregular
www	I-Irregular
.	I-Irregular
softwarefx	I-Irregular
.	I-Irregular
com	I-Irregular
)	I-Irregular
has	O
been	O
a	O
leader	O
in	O
charting	O
for	O
years	O
.	B-Irregular
I	O
personally	O
have	O
used	O
several	O
different	O
versions	O
for	O
over	O
8	O
years	O
and	O
it	O
is	O
rock	O
solid	O
.	B-Irregular
I	O
have	O
re	B-Irregular
-	I-Irregular
evaluated	I-Irregular
charting	O
options	O
periodically	O
,	B-Irregular
and	O
ChartFX	B-Irregular
has	O
won	O
in	O
my	O
environment	O
based	O
almost	O
purely	O
on	O
feature	O
set	O
.	B-Irregular
It	O
is	O
not	O
free	O
or	O
cheap	O
,	B-Irregular
but	O
it	O
is	O
well	O
worth	O
the	O
price	O
they	O
charge	O
.	B-Irregular
-	B-Irregular
Geoffrey	O
When	O
learning	O
a	O
new	O
technology	O
rich	O
tooling	O
gets	O
you	O
into	O
things	O
without	O
big	O
headaches	O
.	B-Irregular
At	O
this	O
point	O
the	O
community	O
at	O
ops4j	B-Irregular
.	I-Irregular
org	I-Irregular
provides	O
a	O
rich	O
toolset	B-Irregular
called	O
"	B-Irregular
PAX	I-Irregular
"	I-Irregular
which	O
includes	O
:	B-Irregular
Pax	I-Irregular
Runner	I-Irregular
:	I-Irregular
Run	O
and	O
switch	O
between	O
Felix	O
,	B-Irregular
Equinox	O
,	B-Irregular
Knopflerfish	I-Irregular
and	O
Concierge	O
easily	O
Pax	B-Irregular
Construct	I-Irregular
:	I-Irregular
Construct	O
,	B-Irregular
Organize	O
&	B-Irregular
Build	O
OSGi	B-Irregular
projects	O
with	O
maven	O
easily	O
Pax	B-Irregular
Drone	I-Irregular
:	I-Irregular
Test	O
your	O
OSGi	B-Irregular
bundles	O
with	O
Junit	B-Irregular
while	O
being	O
framework	O
independent	O
(	B-Irregular
uses	O
PaxRunner	B-Irregular
)	I-Irregular
Then	O
there	O
are	O
many	O
implementations	O
of	O
OSGi	B-Irregular
compendium	O
services	O
:	B-Irregular
Pax	I-Irregular
Logging	I-Irregular
(	I-Irregular
logging	O
)	B-Irregular
,	I-Irregular
Pax	I-Irregular
Web	I-Irregular
(	I-Irregular
http	I-Irregular
service	O
)	B-Irregular
,	I-Irregular
Pax	I-Irregular
Web	I-Irregular
Extender	I-Irregular
(	I-Irregular
war	O
support	O
)	B-Irregular
,	I-Irregular
Pax	I-Irregular
Coin	I-Irregular
(	I-Irregular
configuration	O
)	B-Irregular
,	I-Irregular
Pax	I-Irregular
Shell	I-Irregular
(	I-Irregular
shell	O
implementation	O
,	B-Irregular
part	O
of	O
the	O
next	O
osgi	B-Irregular
release	O
)	B-Irregular
and	O
much	O
more	O
.	B-Irregular
.	I-Irregular
.	I-Irregular
and	O
there	O
is	O
a	O
helpful	O
,	B-Irregular
framework	O
independend	B-Irregular
community	O
,	B-Irregular
-	I-Irregular
but	O
thats	O
now	O
advertisement	O
;	B-Irregular
-	I-Irregular
)	I-Irregular
Alt	B-Irregular
-	I-Irregular
Shift	I-Irregular
-	I-Irregular
R	I-Irregular
stands	O
for	O
rename	O
,	B-Irregular
not	O
refactor	B-Irregular
.	I-Irregular
Refactoring	O
is	O
a	O
more	O
general	O
term	O
(	B-Irregular
as	O
defined	O
by	O
the	O
book	O
)	B-Irregular
.	I-Irregular
Nevertheless	O
,	B-Irregular
it	O
is	O
one	O
of	O
my	O
favorite	O
refactorings	B-Irregular
.	I-Irregular
Others	O
include	O
:	B-Irregular
Alt	I-Irregular
-	I-Irregular
Shift	I-Irregular
-	I-Irregular
M	I-Irregular
:	I-Irregular
Extract	O
Method	O
(	B-Irregular
when	O
a	O
code	O
block	O
or	O
an	O
expression	O
is	O
selected	O
)	B-Irregular
Alt	I-Irregular
-	I-Irregular
Shift	I-Irregular
-	I-Irregular
L	I-Irregular
:	I-Irregular
Extract	O
Local	O
Variable	O
(	B-Irregular
when	O
an	O
expression	O
is	O
selected	O
)	B-Irregular
Extract	O
Local	O
Variable	O
is	O
especially	O
useful	O
when	O
I	O
don	B-Irregular
'	I-Irregular
t	I-Irregular
remember	O
(	B-Irregular
or	O
bother	O
to	O
type	O
)	B-Irregular
the	O
result	O
type	O
of	O
a	O
method	O
.	B-Irregular
Assuming	O
you	O
have	O
a	O
method	O
JdbcTemplate	B-Irregular
createJdbcTemplate	I-Irregular
(	I-Irregular
)	I-Irregular
in	O
your	O
class	O
,	B-Irregular
write	O
some	O
code	O
such	O
as	O
this	O
:	B-Irregular
Select	O
the	O
expression	O
createJdbcTemplate	B-Irregular
(	I-Irregular
)	I-Irregular
,	I-Irregular
click	O
Alt	B-Irregular
-	I-Irregular
Shift	I-Irregular
-	I-Irregular
L	I-Irregular
,	I-Irregular
type	O
the	O
name	O
of	O
variable	O
and	O
press	O
enter	O
.	B-Irregular
My	O
docs	O
would	O
probably	O
best	O
be	O
handled	O
by	O
accessing	O
:	B-Irregular
Look	O
up	O
the	O
docs	O
on	O
System	B-Irregular
.	I-Irregular
getProperty	I-Irregular
.	I-Irregular
Difference	O
between	O
Pattern	B-Irregular
.	I-Irregular
quote	I-Irregular
and	O
Matcher	B-Irregular
.	I-Irregular
quoteReplacement	I-Irregular
was	O
not	O
clear	O
to	O
me	O
before	O
I	O
saw	O
following	O
example	O
Do	O
those	O
waiting	O
threads	O
wait	O
for	O
ever	O
,	B-Irregular
or	O
do	O
they	O
eventually	O
proceed	O
?	B-Irregular
If	O
the	O
latter	O
,	B-Irregular
it	O
may	O
be	O
that	O
the	O
lock	O
is	O
held	O
by	O
the	O
garbage	O
collector	O
.	B-Irregular
You	O
can	O
add	O
the	O
arguments	O
-	B-Irregular
verbose	O
:	B-Irregular
gc	I-Irregular
with	O
-	B-Irregular
XX	O
:	B-Irregular
+	I-Irregular
PrintGCDetails	I-Irregular
on	O
your	O
java	B-Irregular
command	O
line	O
to	O
be	O
told	O
when	O
GCs	B-Irregular
are	O
occurring	O
.	B-Irregular
If	O
gc	B-Irregular
activity	O
coincides	O
with	O
your	O
slowdowns	O
it	O
may	O
indicate	O
that	O
this	O
is	O
the	O
problem	O
.	B-Irregular
Here	B-Irregular
'	I-Irregular
s	I-Irregular
some	O
information	O
on	O
garbage	O
collection	O
.	B-Irregular
db4objects	B-Irregular
might	O
be	O
the	O
best	O
choice	O
As	O
has	O
been	O
noted	O
,	B-Irregular
the	O
Preferences	B-Irregular
API	I-Irregular
uses	O
the	O
registry	O
to	O
store	O
preferences	O
,	B-Irregular
but	O
cannot	O
be	O
used	O
to	O
access	O
the	O
whole	O
registry	O
.	B-Irregular
However	O
,	B-Irregular
a	O
pirate	O
called	O
David	B-Irregular
Croft	I-Irregular
has	O
worked	O
out	O
that	O
it	B-Irregular
'	I-Irregular
s	I-Irregular
possible	O
to	O
use	O
methods	O
in	O
Sun	B-Irregular
'	I-Irregular
s	I-Irregular
implementation	O
of	O
the	O
Preferences	B-Irregular
API	I-Irregular
for	O
reading	O
the	O
Windows	O
registry	O
from	O
Java	O
without	O
JNI	B-Irregular
.	I-Irregular
There	O
are	O
some	O
dangers	O
to	O
that	O
,	B-Irregular
but	O
it	O
is	O
worth	O
a	O
look	O
.	B-Irregular
This	O
idea	O
is	O
seen	O
a	O
lot	O
in	O
c	B-Irregular
+	I-Irregular
+	I-Irregular
,	I-Irregular
it	O
allows	O
operations	O
to	O
be	O
cascaded	O
.	B-Irregular
.	I-Irregular
.	I-Irregular
for	O
example	O
is	O
where	O
the	O
stream	O
method	O
<	B-Irregular
<	I-Irregular
returns	O
an	O
instance	O
of	O
itself	O
(	B-Irregular
*	I-Irregular
this	O
)	B-Irregular
.	I-Irregular
see	O
this	O
:	B-Irregular
http	I-Irregular
:	I-Irregular
/	I-Irregular
/	I-Irregular
www	I-Irregular
.	I-Irregular
java2s	I-Irregular
.	I-Irregular
com	I-Irregular
/	I-Irregular
Tutorial	I-Irregular
/	I-Irregular
Cpp	I-Irregular
/	I-Irregular
0180	I-Irregular
_	I-Irregular
_	I-Irregular
Class	I-Irregular
/	I-Irregular
Cascadingmemberfunctioncallswiththethispointer	I-Irregular
.	I-Irregular
htm	I-Irregular
Ultimately	O
you	O
always	O
have	O
a	O
finite	O
max	O
of	O
heap	O
to	O
use	O
no	O
matter	O
what	O
platform	O
you	O
are	O
running	O
on	O
.	B-Irregular
In	O
Windows	B-Irregular
32	I-Irregular
bit	O
this	O
is	O
around	O
2gb	B-Irregular
(	I-Irregular
not	O
specifically	O
heap	O
but	O
total	O
amount	O
of	O
memory	O
per	O
process	O
)	B-Irregular
.	I-Irregular
It	O
just	O
happens	O
that	O
Java	O
chooses	O
to	O
make	O
the	O
default	O
smaller	O
(	B-Irregular
presumably	O
so	O
that	O
the	O
programmer	O
can	B-Irregular
'	I-Irregular
t	I-Irregular
create	O
programs	O
that	O
have	O
runaway	O
memory	O
allocation	O
without	O
running	O
into	O
this	O
problem	O
and	O
having	O
to	O
examine	O
exactly	O
what	O
they	O
are	O
doing	O
)	B-Irregular
.	I-Irregular
So	O
this	O
given	O
there	O
are	O
several	O
approaches	O
you	O
could	O
take	O
to	O
either	O
determine	O
what	O
amount	O
of	O
memory	O
you	O
need	O
or	O
to	O
reduce	O
the	O
amount	O
of	O
memory	O
you	O
are	O
using	O
.	B-Irregular
One	O
common	O
mistake	O
with	O
garbage	O
collected	O
languages	O
such	O
as	O
Java	O
or	O
C	B-Irregular
#	I-Irregular
is	O
to	O
keep	O
around	O
references	O
to	O
objects	O
that	O
you	O
no	O
longer	O
are	O
using	O
,	B-Irregular
or	O
allocating	O
many	O
objects	O
when	O
you	O
could	O
reuse	O
them	O
instead	O
.	B-Irregular
As	O
long	O
as	O
objects	O
have	O
a	O
reference	O
to	O
them	O
they	O
will	O
continue	O
to	O
use	O
heap	O
space	O
as	O
the	O
garbage	O
collector	O
will	O
not	O
delete	O
them	O
.	B-Irregular
In	O
this	O
case	O
you	O
can	O
use	O
a	O
Java	O
memory	O
profiler	O
to	O
determine	O
what	O
methods	O
in	O
your	O
program	O
are	O
allocating	O
large	O
number	O
of	O
objects	O
and	O
then	O
determine	O
if	O
there	O
is	O
a	O
way	O
to	O
make	O
sure	O
they	O
are	O
no	O
longer	O
referenced	O
,	B-Irregular
or	O
to	O
not	O
allocate	O
them	O
in	O
the	O
first	O
place	O
.	B-Irregular
One	O
option	O
which	O
I	O
have	O
used	O
in	O
the	O
past	O
is	O
"	B-Irregular
JMP	I-Irregular
"	I-Irregular
http	I-Irregular
:	I-Irregular
/	I-Irregular
/	I-Irregular
www	I-Irregular
.	I-Irregular
khelekore	I-Irregular
.	I-Irregular
org	I-Irregular
/	I-Irregular
jmp	I-Irregular
/	I-Irregular
.	I-Irregular
If	O
you	O
determine	O
that	O
you	O
are	O
allocating	O
these	O
objects	O
for	O
a	O
reason	O
and	O
you	O
need	O
to	O
keep	O
around	O
references	O
(	B-Irregular
depending	O
on	O
what	O
you	O
are	O
doing	O
this	O
might	O
be	O
the	O
case	O
)	B-Irregular
,	I-Irregular
you	O
will	O
just	O
need	O
to	O
increase	O
the	O
max	O
heap	O
size	O
when	O
you	O
start	O
the	O
program	O
.	B-Irregular
However	O
,	B-Irregular
once	O
you	O
do	O
the	O
memory	O
profiling	O
and	O
understand	O
how	O
your	O
objects	O
are	O
getting	O
allocated	O
you	O
should	O
have	O
a	O
better	O
idea	O
about	O
how	O
much	O
memory	O
you	O
need	O
.	B-Irregular
In	O
general	O
if	O
you	O
can	B-Irregular
'	I-Irregular
t	I-Irregular
guarantee	O
that	O
your	O
program	O
will	O
run	O
in	O
some	O
finite	O
amount	O
of	O
memory	O
(	B-Irregular
perhaps	O
depending	O
on	O
input	O
size	O
)	B-Irregular
you	O
will	O
always	O
run	O
into	O
this	O
problem	O
.	B-Irregular
Only	O
after	O
exhausting	O
all	O
of	O
this	O
will	O
you	O
need	O
to	O
look	O
into	O
caching	O
objects	O
out	O
to	O
disk	O
etc	O
.	B-Irregular
At	O
this	O
point	O
you	O
should	O
have	O
a	O
very	O
good	O
reason	O
to	O
say	O
"	B-Irregular
I	O
need	O
Xgb	B-Irregular
of	O
memory	O
"	B-Irregular
for	O
something	O
and	O
you	O
can	B-Irregular
'	I-Irregular
t	I-Irregular
work	O
around	O
it	O
by	O
improving	O
your	O
algorithms	O
or	O
memory	O
allocation	O
patterns	O
.	B-Irregular
Generally	O
this	O
will	O
only	O
usually	O
be	O
the	O
case	O
for	O
algorithms	O
operating	O
on	O
large	O
datasets	O
(	B-Irregular
like	O
a	O
database	O
or	O
some	O
scientific	O
analysis	O
program	O
)	B-Irregular
and	O
then	O
techniques	O
like	O
caching	O
and	O
memory	O
mapped	O
IO	O
become	O
useful	O
.	B-Irregular
What	O
about	O
an	O
enumeration	O
?	B-Irregular
audacity	O
does	O
it	O
out	O
of	O
the	O
box	O
and	O
it	B-Irregular
'	I-Irregular
s	I-Irregular
free	O
.	B-Irregular
THere	B-Irregular
are	O
several	O
plug	O
ins	O
for	O
mp3	B-Irregular
players	O
as	O
well	O
that	O
are	O
free	O
.	B-Irregular
Apparently	O
it	B-Irregular
'	I-Irregular
s	I-Irregular
pretty	O
easy	O
to	O
do	O
with	O
an	O
mp3	B-Irregular
since	O
it	B-Irregular
'	I-Irregular
s	I-Irregular
already	O
coded	O
in	O
the	O
frequency	O
domain	O
.	B-Irregular
The	O
finally	O
block	O
is	O
always	O
executed	O
unless	O
there	O
is	O
abnormal	O
program	O
termination	O
,	B-Irregular
either	O
resulting	O
from	O
a	O
JVM	B-Irregular
crash	O
or	O
from	O
a	O
call	O
to	O
System	B-Irregular
.	I-Irregular
exit	I-Irregular
(	I-Irregular
0	I-Irregular
)	I-Irregular
.	I-Irregular
On	O
top	O
of	O
that	O
,	B-Irregular
any	O
value	O
returned	O
from	O
within	O
the	O
finally	O
block	O
will	O
override	O
the	O
value	O
returned	O
prior	O
to	O
execution	O
of	O
the	O
finally	O
block	O
,	B-Irregular
so	O
be	O
careful	O
of	O
checking	O
all	O
exit	O
points	O
when	O
using	O
try	O
finally	O
.	B-Irregular
